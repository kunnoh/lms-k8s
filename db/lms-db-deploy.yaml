apiVersion: apps/v1
kind: Deployment
metadata:
  name: lms-db-deploy
  namaspace: lms
  labels:
    app: lms-db-deployment
    tier: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lms-db
      tier: db
  template:
    metadata:
      labels:
        app: lms-db
        tier: db
    spec:
      containers:
        - name: lms-postgres-container
          image: postgres:17-alpine
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "128Mi"
              cpu: "200m"
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdata
          envFrom:
            - configMapRef:
                name: lms-dbconfig

          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3

      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: lms-db-claim
