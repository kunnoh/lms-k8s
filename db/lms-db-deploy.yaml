apiVersion: apps/v1
kind: Deployment
metadata:
  name: lms-db-deploy
  namespace: lms-beta
  labels:
    app: lms-db-deployment
    tier: dbend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: lms-db
      tier: dbend
  template:
    metadata:
      labels:
        app: lms-db
        tier: dbend
    spec:
      containers:
        - name: lms-postgres-container
          image: postgres:17-alpine
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "128Mi"
              cpu: "200m"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: lms-dbconfig
          volumeMounts:
            - name: postgresdata
              mountPath: /var/lib/postgresql/data
            - name: psqlsecret
              mountPath: /secrets
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: lms-db-claim
        - name: psqlsecret
          secret:
            secretName: psql-secret-data
